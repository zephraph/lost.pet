generator client {
  provider               = "prisma-client"
  runtime                = "workerd"
  moduleFormat           = "esm"
  generatedFileExtension = "ts"
  importFileExtension    = "ts"
  previewFeatures        = ["queryCompiler", "driverAdapters"]
  output                 = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// #region Auth Models

model User {
  id        String   @id @default(uuid()) // User ID (UUID-based)
  createdAt DateTime @default(now())

  name          String
  email         String
  emailVerified Boolean
  image         String?
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]

  // Used for the admin plugin
  role       String?
  banned     Boolean?
  banReason  String?
  banExpires DateTime?

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  impersonatedBy String?

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

// #endregion Auth Models

// #region Domain Models

model Pet {
  id        String   @id @default(uuid())
  name      String
  type      String
  breed     String
  lastSeen  DateTime @map("date")
  image     String
  // Last seen location
  latitude  Float
  longitude Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([type])
  @@index([lastSeen])
}

// #endregion Domain Models
